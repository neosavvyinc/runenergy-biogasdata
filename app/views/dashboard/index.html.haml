.dashboard{'ng-controller' => 'controllers.ParentController', 're-spinning-overlay' => 'loading'}
  = render "shared/header_controls"
  .container-fluid.copntrol-row{'ng-controller' => 'controllers.SiteController'}
    %re-bootstrap-button-dropdown.customer{'items' => 'customers', 'selected-item' => 'dashboardHeaderData.customer', 'label-field' => 'name', 'ng-show' => (not current_user.is_customer?).to_s, 'link-class' => 'btn-success'}
    %re-bootstrap-button-dropdown.location{'items' => 'locations', 'selected-item' => 'dashboardHeaderData.site', 'label-field' => 'site_name', 'link-class' => 'btn-success'}
    %re-bootstrap-button-dropdown.flare-specifications{'items' => 'dashboardHeaderData.site.flare_specifications', 'selected-item' => 'dashboardHeaderData.flareSpecification', 'label-field' => 'flare_unique_identifier', 'link-class' => 'btn-success'}
  .container-fluid.control-row.date-time{'ng-controller' => 'controllers.DateController'}
    %span.date
      %span Start Date
      .control-group.input-append
        %input{"bs-datepicker" => "", "data-date-format" => "dd/mm/yyyy", "ng-model" => "dashboardDateData.startDate", :type => "text"}/
        %button.btn{"data-toggle" => "datepicker", :type => "button"}
          %i.icon-calendar
    %span.date
      %span End Date
      .control-group.input-append
        %input{"bs-datepicker" => "", "data-date-format" => "dd/mm/yyyy", "ng-model" => "dashboardDateData.endDate", :type => "text"}/
        %button.btn{"data-toggle" => "datepicker", :type => "button"}
          %i.icon-calendar
    %span.time{'re-disabled' => '!dashboardDateData.startDate || !dashboardDateData.endDate'}
      %span Start Time
      %re-masked-time-input{'data-time' => 'dashboardDateData.startTime'}
    %span.time{'re-disabled' => '!dashboardDateData.startDate || !dashboardDateData.endDate'}
      %span End Time
      %re-masked-time-input{'data-time' => 'dashboardDateData.endTime'}
    %a.btn{'ng-click' => 'onApplyDateTimeFilters()'} Apply Date/Time Filters
    %a.btn.btn-inverse{'ng-click' => 'onClear()'} Clear
  .container-fluid.control-row{'ng-controller' => 'controllers.PageController'}
    %a.btn.btn-inverse.prev{'ng-click' => 'onPrevious()'} Prev Page
    %a.btn.btn-inverse.next{'ng-click' => 'onNext()'} Next Page
    %a.btn.btn-success.export{'ng-click' => 'onExportCSV($event)', 'ng-href' => '{{ getExportCSVLink() }}'} Export To CSV
    %span.export-loader{'re-spinning-overlay' => 'exportingCSV', 're-spinner-radius' => '2', 're-spinning-overlay-length' => '5', 're-spinner-width' => '1', 're-spinner-trail' => '80', 're-spinner-size-to-window' => 'false', 're-spinner-shadow' => 'false'}
  .dashboard.container-fluid
    %ng-view

- content_for :javascript do
  :javascript
    angular.element(document).ready(function() {
       angular.bootstrap(document, ['dashboard']);
     });

