.dashboard-actions{'ng-controller' => 'controllers.DashboardActionController', 'ng-click' => 'onFirstUserInteract()'}
  %ns-serialize{'data' => current_user.to_json(:methods => [:can_edit]).html_safe, 'property' => 'newDataValues.currentUser'}
  - unless operator.nil?
    %ns-serialize{'data' => operator.to_json(:methods => [:location_ids]).html_safe, 'property' => 'newDataValues.selectedLandfillOperator'}
  - unless site.nil?
    %ns-serialize{'data' => site.to_json(:methods => [:location_ids, :monitor_class_ids]).html_safe, 'property' => 'newDataValues.selectedSite'}
  - unless monitor_class.nil?
    %ns-serialize{'data' => monitor_class.to_json(:include => [:monitor_points, :field_log_points], :methods => [:monitor_points_for_all_locations]).html_safe, 'property' => 'newDataValues.selectedMonitorClass'}
  - unless locations_monitor_class.nil?
    %ns-serialize{'data' => locations_monitor_class.to_json(:include => [:monitor_limits => {:include => :monitor_point}]).html_safe, 'property' => 'newDataValues.selectedLocationsMonitorClass'}
  - unless section.nil?
    %ns-serialize{'data' => section.to_json(:methods => [:asset_ids]).html_safe, 'property' => 'newDataValues.selectedSection'}
  - unless asset.nil?
    %ns-serialize{'data' => asset.to_json.html_safe, 'property' => 'newDataValues.selectedAsset'}
  %ns-serialize{'data' => landfill_operators.to_json(:methods => [:location_ids]).html_safe, 'property' => 'landfillOperators'}
  %ns-serialize{'data' => sites.to_json(:methods => [:section_ids, :monitor_class_ids]).html_safe, 'property' => 'sites'}
  - unless sections.nil?
    %ns-serialize{'data' => sections.to_json(:methods => [:asset_ids]).html_safe, 'property' => 'sections'}
  - unless assets.nil?
    %ns-serialize{'data' => assets.to_json.html_safe, 'property' => 'assets'}
  - unless monitor_points.nil?
    %ns-serialize{'data' => monitor_points.to_json.html_safe, 'property' => 'newDataValues.monitorPoints'}
  %ns-serialize{'data' => monitor_classes.to_json(:include => [:monitor_points, :field_log_points], :methods => [:monitor_points_for_all_locations]).html_safe, 'property' => 'monitorClasses'}
  - unless locked
    %re-bootstrap-button-dropdown.operator{'items' => 'landfillOperators', 'selected-item' => 'newDataValues.selectedLandfillOperator', 'label-field' => 'name', 'link-class' => 'btn-success', 'default' => 'Choose Landfill Operator'}
    %re-bootstrap-button-dropdown.location{'items' => 'availableSites', 'selected-item' => 'newDataValues.selectedSite', 'label-field' => 'site_name', 'link-class' => 'btn-success', 'default' => 'Choose Site'}
    %re-bootstrap-button-dropdown.monitor-class{'disabled' => '{{newDataValues.selectedSite | nsLogicalIf : "false" : "true"}}', 'items' => 'availableMonitorClasses', 'selected-item' => 'newDataValues.selectedMonitorClass', 'label-field' => 'name', 'link-class' => '{{newDataValues.selectedSite | nsLogicalIf : "btn btn-success" : "btn"}}', 'default' => 'Choose Monitor Class'}
    - unless sections.nil? or assets.nil?
      %span Optional:
    - unless sections.nil?
      %re-bootstrap-button-dropdown.section{'items' => 'availableSections', 'selected-item' => 'newDataValues.selectedSection', 'label-field' => 'name', 'link-class' => 'btn btn-warning', 'default' => 'Choose Section'}
    - unless assets.nil?
      %re-bootstrap-button-dropdown.asset{'items' => 'availableAssets', 'selected-item' => 'newDataValues.selectedAsset', 'label-field' => 'unique_identifier', 'link-class' => 'btn btn-warning', 'default' => 'Choose Asset'}
    - unless sections.nil? and assets.nil?
      %a.btn.btn-primary{'ng-click' => 'onReset()'} Reset
    - if edit_allowed
      %a.btn.btn-danger.save-changes{'ng-click' => 'onSaveEdit()'} Save Data Changes
    - if params[:controller].include?('data_analysis')
      %a.btn{'ng-click' => 'newDataValues.enable.plotMonitorPoint = !newDataValues.enable.plotMonitorPoint', 'ng-class' => 'newDataValues.enable.plotMonitorPoint | nsLogicalIf : "btn-primary" : ""'} {{newDataValues.enable.plotMonitorPoint | nsLogicalIf : 'Disable Plot' : 'Plot Monitor Point'}}
      %a.btn{'ng-click' => 'newDataValues.enable.heatMap = !newDataValues.enable.heatMap', 'ng-class' => 'newDataValues.enable.heatMap | nsLogicalIf : "btn-primary" : ""'} {{newDataValues.enable.heatMap | nsLogicalIf : 'Disable Heat Map' : 'Heat Map'}}
      %input.heat-map-max{:placeholder => 'Max', 'ng-model' => 'heatMapMax'}
  - else
    %a.btn{'ng-bind' => 'newDataValues.selectedLandfillOperator.name'}
    %a.btn{'ng-bind' => 'newDataValues.selectedSite.site_name'}
    %a.btn{'ng-bind' => 'newDataValues.selectedMonitorClass.name'}


